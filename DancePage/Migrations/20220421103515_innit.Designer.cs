// <auto-generated />
using DancePage.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DancePage.Migrations
{
    [DbContext(typeof(DanceDbContext))]
    [Migration("20220421103515_innit")]
    partial class innit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DancePage.Model.GifsInfo", b =>
                {
                    b.Property<int>("GifsInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GifsInfoId"), 1L, 1);

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GifsInfoId");

                    b.HasIndex("UserId");

                    b.ToTable("Gifsinfos");

                    b.HasData(
                        new
                        {
                            GifsInfoId = 1,
                            Artist = "hej",
                            Comment = "Comment Test",
                            Link = "http://jalla.se",
                            UserId = 1
                        },
                        new
                        {
                            GifsInfoId = 2,
                            Artist = "artist2",
                            Comment = "Comment Test2",
                            Link = "http://jalla2.se",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DancePage.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "Test@test.se",
                            FirstName = "Andre",
                            LastName = "Lindqvist",
                            Password = "332211"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "Test2@test.se",
                            FirstName = "Andre2",
                            LastName = "Lindqvist",
                            Password = "332211"
                        });
                });

            modelBuilder.Entity("DancePage.Model.GifsInfo", b =>
                {
                    b.HasOne("DancePage.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
